{"version":3,"sources":["storage.js","components/Logo/logo.png","locales/index.js","routes/AuthenticatedRoute.js","routes/Routing.js","config.js","api/index.js","api/AuthService.js","store/loader/actions.js","store/loader/reducers.js","store/user/actions.js","store/user/reducers.js","routes/index.js","pages/Login/index.js","pages/Sample/index.js","pages/NewPage/index.js","pages/NotFoundPage/index.js","routes/ScrollToTop.js","components/Logo/index.js","components/Header/index.js","components/Loader/index.js","components/LanguageSwitcher/index.js","utils/hooks/useOutsideClick.js","components/IconButton/index.js","containers/PageContainer/index.js","App.tsx","reportWebVitals.ts","store/index.js","index.tsx"],"names":["storage","global","localStorage","exportedObject","get","key","getItem","set","value","setItem","remove","removeItem","clear","resources","en","translation","de","i18n","use","initReactI18next","init","lng","fallbackLng","Object","keys","keySeparator","interpolation","escapeValue","AuthenticatedRoute","isAuthenticated","loginPath","props","history","useHistory","location","useLocation","setTimeout","replace","from","Routing","routes","extraProps","matchedPath","useRouteMatch","path","IndexRoute","useRef","Routes","useMemo","map","route","isPrivate","private","index","RouteType","Route","trimmedMatchedPath","trimmedPath","realPath","OrigComponent","component","current","exact","render","to","pathname","name","description","baseURL","process","REACT_APP_BASE_URL","ttl","transportList","defaultTimezone","contact","phone","email","createCancelToken","CancelToken","source","endpoints","AuthService","config","this","injectedInterceptors","refreshingToken","axios","create","eventEmitter","EventTarget","verifyToken","bind","defaults","headers","common","type","fn","addEventListener","token","refreshToken","cancelToken","username","password","a","Promise","resolve","data","refresh_token","roles","getConfig","post","types","SET_LOADING","setLoading","isLoading","payload","reducersMap","actionTypes","state","inProcess","loading","initialState","exportedFunction","actionType","produce","draft","authService","LOGOUT","SET_TOKEN","SET_USER_ROLES","LOGIN_ERROR","listeningAPIEvents","setToken","setRoles","dispatch","rememberMe","listen","detail","onRegenerateTokenSuccess","logout","onRegenerateTokenFailure","userDetails","setLoginError","error","login","canceller","loaderActions","then","catch","response","message","status","finally","length","Error","cancel","logged","SET_FILTERS","filters","dateFrom","dateTo","id","pickUpStations","dropOffStations","useDispatch","userActions","t","useTranslation","isLoggedIn","useSelector","user","useState","cancellerLoginRequest","useEffect","className","onClick","doLogin","AppRoutes","ScrollToTop","window","scrollTo","Logo","altText","src","require","alt","Header","children","Loader","LanguageSwitcher","languages","language","onSelect","isSelectorOpen","setSelectorOpen","wrapperRef","sortedLanguages","sort","changeLanguage","e","preventDefault","ref","handleClickOutside","event","contains","target","document","removeEventListener","useOutsideClick","toUpperCase","href","lang","hrefLang","langMap","nativeName","IconButton","icon","PageContainer","loader","classes","classNames","onLangSelect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","compose","store","preloadedStage","middlewareEnhancer","applyMiddleware","thunk","composedEnhancers","createStore","configureStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ccfcc53.chunk.js","sourcesContent":["const storage = global.localStorage;\n\nconst exportedObject = {\n  get: (key) => storage && storage.getItem(key),\n  set: (key, value) => storage && storage.setItem(key, value),\n  remove: (key) => storage && storage.removeItem(key),\n  clear: () => storage && storage.clear(),\n};\n\nexport default exportedObject;\n","export default __webpack_public_path__ + \"static/media/logo.001dd072.png\";","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport localeEN from './en.json';\nimport localeDE from './de.json';\n\nconst resources = {\n  en: { translation: localeEN },\n  de: { translation: localeDE },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: 'en',\n  fallbackLng: Object.keys(resources),\n  keySeparator: false,\n  interpolation: {\n    escapeValue: false,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, useHistory, useLocation } from 'react-router-dom';\n\nexport default function AuthenticatedRoute({ isAuthenticated, loginPath, ...props }) {\n  const history = useHistory();\n  const location = useLocation();\n\n  if (!isAuthenticated) {\n    setTimeout(() => history.replace(loginPath, { from: location }), 0);\n    return null;\n  }\n\n  return <Route {...props} />;\n}\n\nAuthenticatedRoute.propTypes = {\n  loginPath: PropTypes.string.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n","import React, { useMemo, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router-dom';\n\nimport AuthenticatedRoute from './AuthenticatedRoute';\n\nconst CATCH_ALL_ROUTE = '*';\n\nexport default function Routing({ routes, ...extraProps }) {\n  let { path: matchedPath } = useRouteMatch();\n\n  let IndexRoute = useRef(null);\n  const Routes = useMemo(\n    () =>\n      routes.map((route, key) => {\n        const { private: isPrivate, index, path, ...props } = route;\n        const RouteType = isPrivate ? AuthenticatedRoute : Route;\n\n        const trimmedMatchedPath = matchedPath.replace(/^\\/$/, '');\n        const trimmedPath = path.replace(/^\\/$/, '');\n        const realPath = path === CATCH_ALL_ROUTE ? path : `${trimmedMatchedPath}${trimmedPath}`;\n\n        // Setup Index\n        if (index && matchedPath !== realPath && realPath !== CATCH_ALL_ROUTE) {\n          const { component: OrigComponent } = props;\n          const render = () => (index === 'redirect' ? <Redirect to={{ pathname: realPath }} /> : <OrigComponent />);\n          IndexRoute.current = <Route exact path={matchedPath} render={render} />;\n        }\n\n        return <RouteType {...props} {...extraProps} key={key} path={realPath} />;\n      }),\n    [routes, extraProps, matchedPath]\n  );\n\n  return (\n    <Switch>\n      {IndexRoute.current}\n      {Routes}\n    </Switch>\n  );\n}\n\nRouting.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loginPath: PropTypes.string.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n","import pkg from '../package.json';\n\nconst exportedObject = {\n  name: pkg.description,\n  baseURL: process.env.REACT_APP_BASE_URL || 'https://dat.local/api',\n  ttl: {\n    transportList: 60,\n  },\n  defaultTimezone: 'Europe/Berlin',\n  contact: {\n    name: 'Transport Team Seven Senders',\n    phone: '+49 30 233218755',\n    email: 'operations@sevensenders.com',\n  },\n};\n\nexport default exportedObject;\n","import { CancelToken } from 'axios';\n\nexport function createCancelToken() {\n  return CancelToken.source();\n}\n","import axios from 'axios';\nimport EventTarget from '@ungap/event-target';\nimport config from '../config';\n\n\nexport const endpoints = {\n  login: '/token',\n  refreshToken: '/token/refresh',\n  userDetails: '/me'\n};\n\nexport default class AuthService {\n  constructor() {\n    const baseURL = config.baseURL;\n    this.injectedInterceptors = false;\n    this.refreshingToken = false;\n\n    this.axios = axios.create({\n      baseURL,\n    });\n\n    this.eventEmitter = new EventTarget();\n\n    this.verifyToken = this.verifyToken.bind(this);\n  }\n\n  /**\n   * Request interceptor to verify token expiry\n   * @param config\n   * @returns {*}\n   */\n  verifyToken(config) {\n    /**\n     * TODO verify token\n     */\n    return config;\n  }\n\n  \n  getHeaders() {\n    return { ...this.axios.defaults.headers.common };\n  }\n\n  listen(type, fn) {\n    return this.eventEmitter.addEventListener(type, fn);\n  }\n\n  /**\n   * Set token for all request\n   * @param token\n   * @param refreshToken\n   */\n  setToken(token, refreshToken = null) {\n    this.token = token;\n    this.refreshToken = refreshToken;\n    this.axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n\n  /**\n   * Generate config for request\n   * @param cancelToken\n   * @returns {{}}\n   */\n  getConfig({ cancelToken }) {\n    const config = {};\n\n    if (cancelToken && cancelToken.token) {\n      config.cancelToken = cancelToken.token;\n    }\n\n    return config;\n  }\n\n  /*async login(username, password, cancelToken = null) {\n    const config = this.getConfig({ cancelToken });\n    return await this.axios.post(endpoints.login, { username, password }, config);\n  }*/\n\n  async login(username, password, cancelToken = null) {\n    return await Promise.resolve({data:{token: \"my_token\", refresh_token:true}});\n  }\n\n  /*async userDetails(cancelToken = null) {\n    const config = this.getConfig({ cancelToken });\n\n    return await this.axios.get(endpoints.userDetails, config);\n  }*/\n\n  async userDetails(cancelToken = null) {\n    return await Promise.resolve({data:{roles: [\"admin\"]}});\n  }\n\n  async generateToken(refreshToken, cancelToken = null) {\n    const config = this.getConfig({ cancelToken });\n\n    return await this.axios.post(endpoints.refreshToken, { refresh_token: refreshToken }, config);\n  }\n\n}\n","export const types = {\n    SET_LOADING: 'SET_LOADING',\n  };\n  \n  export const setLoading = (isLoading = false) => ({\n    type: types.SET_LOADING,\n    payload: isLoading,\n  });\n  ","import produce from 'immer';\nimport { types as actionTypes } from './actions';\n\nconst reducersMap = {\n  [actionTypes.SET_LOADING]: (state, isLoading) => {\n    state.inProcess += isLoading ? 1 : -1;\n\n    if (state.inProcess <= 0) {\n      state.loading = false;\n      state.inProcess = 0;\n    } else {\n      state.loading = true;\n    }\n\n    return state;\n  },\n};\n\nconst initialState = {\n  loading: false,\n  inProcess: 0,\n};\n\nconst exportedFunction =  (state = initialState, { type: actionType, payload }) =>\n  produce(state, (draft) => (actionType in reducersMap && reducersMap[actionType](draft, payload)) || state);\n\nexport default exportedFunction;\n","import { createCancelToken } from '../../api';\nimport AuthService from '../../api/AuthService';\nimport storage from '../../storage';\nimport { actions as loaderActions } from '../loader';\n\nlet authService = new AuthService();\n\nexport const types = {\n  LOGOUT: 'LOGOUT',\n  SET_TOKEN: 'SET_TOKEN',\n  SET_USER_ROLES: 'SET_USER_ROLES',\n  LOGIN_ERROR: 'LOGIN_ERROR'\n};\n\n/**\n * token regenerate events\n */\nlet listeningAPIEvents = false;\n\nconst onRegenerateTokenSuccess =\n  (dispatch) =>\n  ({ detail: data }) => {\n    const { token, refresh_token } = data;\n    const rememberMe = storage.get('rememberMe') === 'true';\n\n    dispatch(setToken(token, rememberMe && refresh_token));\n  };\n\nconst onRegenerateTokenFailure = (dispatch) => () => {\n  dispatch(logout());\n};\n\n/**\n * Actions\n */\n\nconst setToken = (token, refreshToken) => {\n  storage.set('token', token);\n  refreshToken && storage.set('refreshToken', refreshToken);\n\n  authService.setToken(token, refreshToken);\n\n  return {\n    type: types.SET_TOKEN,\n    payload: { token, refreshToken },\n  };\n};\n\nconst setRoles = (roles) => ({\n  type: types.SET_USER_ROLES,\n  payload: roles,\n});\n\nexport const init = () => (dispatch) => {\n  const token = storage.get('token');\n  const refreshToken = storage.get('refreshToken');\n  const rememberMe = storage.get('rememberMe') === 'true';\n\n  if (!listeningAPIEvents) {\n    authService.listen('regenerate_success', onRegenerateTokenSuccess(dispatch));\n    authService.listen('regenerate_failure', onRegenerateTokenFailure(dispatch));\n    listeningAPIEvents = true;\n  }\n\n  if (!token || (rememberMe && !refreshToken)) {\n    storage.clear();\n    return;\n  }\n\n  dispatch(setToken(token, rememberMe && refreshToken));\n\n  return dispatch(userDetails());\n};\n\nconst setLoginError = (error) => ({\n  type: types.LOGIN_ERROR,\n  payload: error,\n});\n\nexport const login = (username, password, rememberMe) => (dispatch) => {\n  let canceller = createCancelToken();\n\n  storage.set('rememberMe', rememberMe);\n\n  dispatch(loaderActions.setLoading(true));\n  dispatch(setLoginError(null));\n\n  authService.login(username, password, canceller)\n    .then(({ data }) => {\n      const { token, refresh_token } = data;\n      \n      dispatch(setToken(token, rememberMe && refresh_token));\n      dispatch(userDetails(canceller));\n    })\n    .catch(({ response }) => {\n      dispatch(\n        setLoginError({\n          message: response?.data?.message || 'Something wrong',\n          status: response?.status || 500,\n        })\n      );\n    })\n    .finally(() => {\n      dispatch(loaderActions.setLoading(false));\n    });\n\n  return canceller;\n};\n\nexport const logout = () => (dispatch) => {\n  storage.clear();\n  dispatch({ type: types.LOGOUT });\n};\n\nexport const userDetails =\n  (cancelToken = null) =>\n  (dispatch) => {\n    const canceller = cancelToken || createCancelToken();\n\n    dispatch(loaderActions.setLoading(true));\n\n    authService.userDetails(canceller)\n      .then(({ data }) => {\n        const { roles } = data;\n        if (!roles || roles.length === 0) {\n          throw new Error(\"User doesn't have roles\");\n        }\n        \n        dispatch(setRoles(roles));\n      })\n      .catch((error) => {\n        dispatch(logout());\n      })\n      .finally(() => {\n        canceller.cancel();\n        dispatch(loaderActions.setLoading(false));\n      });\n\n    return canceller;\n  };\n","import produce from 'immer';\nimport { types as actionTypes } from './actions';\n\nconst setRoles = (state, roles) => {\n  state.logged = true;\n  state.roles = roles;\n\n  return state;\n};\n\nconst setToken = (state, { token, refreshToken = null }) => {\n  state.token = token;\n  refreshToken && (state.refreshToken = refreshToken);\n\n  return state;\n};\n\nconst logout = () => {\n  return initialState;\n};\n\nconst loginError = (state, error) => {\n  state.error = error;\n  return state;\n};\n\nconst setFilters = (state, filters) => {\n  state.filters = { ...state.filters, ...filters };\n  return state;\n};\n\nconst reducersMap = {\n  [actionTypes.SET_TOKEN]: setToken,\n  [actionTypes.LOGOUT]: logout,\n  [actionTypes.SET_USER_ROLES]: setRoles,\n  [actionTypes.LOGIN_ERROR]: loginError,\n  [actionTypes.SET_FILTERS]: setFilters,\n};\n\nconst initialState = {\n  logged: false,\n  token: null,\n  refreshToken: null,\n  roles: null,\n  error: null,\n  filters: {\n    dateFrom: '',\n    dateTo: '',\n    id: '',\n    pickUpStations: [],\n    dropOffStations: [],\n  },\n};\n\nconst exportedFunction =  (state = initialState, { type: actionType, payload }) => {\n  return produce(state, (draft) => (actionType in reducersMap && reducersMap[actionType](draft, payload)) || state);\n};\n\nexport default exportedFunction;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Routing from './Routing';\nimport { LoginPage, SamplePage, NotFoundPage } from '../pages';\nimport { actions as userActions } from '../store/user';\nimport NewPage from '../pages/NewPage';\n\nconst loginPath = '/login';\n\nfunction Logout() {\n  const dispatch = useDispatch();\n  dispatch(userActions.logout());\n  return <Redirect to={{ pathname: loginPath }} />;\n}\n\nconst routes = [\n  {\n    path: '/logout',\n    component: Logout,\n    exact: true,\n  },\n  {\n    path: '/login',\n    component: LoginPage,\n    exact: true,\n  },\n  {\n    private: true,\n    index: 'redirect',\n    path: '/sample',\n    component: SamplePage,\n    exact: true,\n  },\n  {\n    private: true,\n    path: '/newPage',\n    component: NewPage,\n    exact: true\n  },\n  {\n    path: '*',\n    component: NotFoundPage,\n  },\n];\n\nexport default function AppRoutes() {\n  const isAuthenticated = useSelector((state) => state.user.logged);\n  const props = {\n    isAuthenticated,\n    loginPath,\n  };\n\n  return <Routing routes={routes} {...props} />;\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport config from '../../config';\nimport { actions as userActions } from '../../store/user';\n\nexport default function Login() {\n  const { t } = useTranslation();\n  const isLoggedIn = useSelector((state) => state.user.logged);\n  const [username] = useState('');\n  const [password] = useState('');\n  const [rememberMe] = useState(false);\n\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let {\n    from: { pathname },\n  } = location.state || { from: { pathname: '/' } };\n  const cancellerLoginRequest = useRef(null);\n\n  useEffect(() => {\n    !isLoggedIn && dispatch(userActions.init());\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    return () => {\n      cancellerLoginRequest.current && cancellerLoginRequest.current.cancel();\n    };\n  }, []);\n\n  const doLogin = ({ username, password, rememberMe }) => {\n   \n    cancellerLoginRequest.current && cancellerLoginRequest.current.cancel();\n    cancellerLoginRequest.current = dispatch(userActions.login(username, password, rememberMe));\n  };\n\n  if (isLoggedIn) {\n    setTimeout(() => history.replace(pathname), 0);\n    return null;\n  }\n\n  return (\n    <div className=\"login-page\">\n      <h1>{config.name}</h1>\n      <input></input>\n      <br></br>\n      <br></br>\n      <input type=\"password\"></input>\n      <br></br>\n      <br></br>\n      <button onClick={()=>doLogin(username, password, rememberMe)}>{t('Login')}</button>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Sample() {\n  return (\n    <div>\n      <h1>SamplePage</h1>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NewPage() {\n  return (\n    <div>\n      <h1>NewPage</h1>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NotFoundPage() {\n  return (\n    <div>\n      Not Found\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Logo({ altText = 'Seven Senders' }) {\n  return (\n    <div className=\"logo\">\n      <img src={require('./logo.png')} alt={altText} />\n    </div>\n  );\n}\n\nLogo.propTypes = {\n  altText: PropTypes.string,\n};\n","import React from 'react';\nimport Logo from '../Logo';\nimport { Link } from 'react-router-dom';\n\nexport default function Header({ children }) {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"left\">\n          <Link to=\"/\">\n            <Logo />\n          </Link>\n        </div>\n        <div className=\"right\">{children}</div>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport default function Loader() {\n  return (\n    <div className=\"loading\">\n      <i className=\"fa fa-spinner fa-pulse\" />\n    </div>\n  );\n}\n","import React, { useState, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport langMap from 'langmap';\n\nimport useOutsideClick from '../../utils/hooks/useOutsideClick';\n\nexport default function LanguageSwitcher({ languages, language, onSelect }) {\n  const [isSelectorOpen, setSelectorOpen] = useState(false);\n  const wrapperRef = useRef(null);\n\n  const sortedLanguages = useMemo(() => languages.sort(), [languages]);\n\n  const toggleSelector = (e) => {\n    e.preventDefault();\n    setSelectorOpen(!isSelectorOpen);\n  };\n\n  const changeLanguage = (language) => async (e) => {\n    e.preventDefault();\n    onSelect(language);\n    setSelectorOpen(false);\n  };\n\n  useOutsideClick(wrapperRef, () => setSelectorOpen(false));\n\n  return (\n    <div className=\"language-switcher\" ref={wrapperRef}>\n      <button className=\"selected\" onClick={toggleSelector}>\n        {language.toUpperCase()} <i className=\"fas fa-sort-down\" />\n      </button>\n      {isSelectorOpen && (\n        <div className=\"languages\">\n          {sortedLanguages.map((language, key) => (\n            <a\n              className={`language ${language}`}\n              href={`#${language}`}\n              lang={language}\n              hrefLang={language}\n              key={key}\n              onClick={changeLanguage(language)}\n            >\n              {language in langMap ? langMap[language].nativeName : language.toUpperCase()}\n            </a>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nLanguageSwitcher.propTypes = {\n  languages: PropTypes.arrayOf(PropTypes.string).isRequired,\n  language: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\n\nexport default function useOutsideClick(ref, onClick) {\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      onClick();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function IconButton({ children, icon, onClick = () => {} }) {\n  return (\n    <button className=\"icon-button\" onClick={onClick}>\n      <i className={`fas ${icon}`} /> {children}\n    </button>\n  );\n}\n\nIconButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport Header from '../../components/Header';\nimport Loader from '../../components/Loader';\nimport LanguageSwitcher from '../../components/LanguageSwitcher';\nimport { IconButton } from '../../components/IconButton';\n\nimport { Link } from 'react-router-dom';\n\nexport default function PageContainer({ children }) {\n  const isLoggedIn = useSelector((state) => state.user.logged);\n  const isLoading = useSelector((state) => state.loader.loading);\n  const { t, i18n } = useTranslation();\n  const { language, languages } = i18n;\n\n  const classes = classNames('page-container', {\n    'guest-user': !isLoggedIn,\n  });\n\n  const onLangSelect = async (language) => {\n    await i18n.changeLanguage(language);\n  };\n\n  return (\n    <div className={classes}>\n      <Header>\n        <LanguageSwitcher language={language} languages={languages} onSelect={onLangSelect} />\n        {isLoggedIn && (\n          <div>\n            <Link to={'/logout'}>\n              <IconButton icon=\"fa-sign-out-alt\">{t('Logout')}</IconButton>\n            </Link>\n\n            <Link to={'newPage'}>\n                newPage\n            </Link>\n          </div>\n        )}\n      </Header>\n      <main>{children}</main>\n      {isLoading && <Loader />}\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './routes';\nimport ScrollToTop from './routes/ScrollToTop';\nimport PageContainer from './containers/PageContainer';\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop />\n      <PageContainer>\n        <Routes />\n      </PageContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { reducers as user } from './user';\nimport { reducers as loader } from './loader';\n\nconst rootReducer = combineReducers({\n  loader,\n  user\n});\n\nconst composeEnhancers = (\n    process.env.NODE_ENV !== 'production' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n) || compose;\n\nconst exportedFunction = function configureStore(preloadedStage) {\n    const middlewareEnhancer = applyMiddleware(thunk);\n    const composedEnhancers = composeEnhancers(middlewareEnhancer);\n\n    return createStore(rootReducer, preloadedStage, composedEnhancers);\n}\n\nexport default exportedFunction;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './locales';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}