{"version":3,"sources":["locales/index.ts","routes/AuthenticatedRoute.tsx","routes/Routing.tsx","config.ts","api/index.ts","api/AuthService.ts","store/loader/actions.ts","store/loader/reducers.ts","store/user/actions.ts","store/user/reducers.ts","routes/index.tsx","pages/Login/index.tsx","pages/Sample/index.tsx","pages/NewPage/index.tsx","pages/NotFoundPage/index.tsx","routes/ScrollToTop.tsx","components/Logo/index.tsx","components/Header/index.tsx","components/Loader/index.tsx","components/LanguageSwitcher/index.tsx","utils/hooks/useOutsideClick.ts","components/IconButton/index.tsx","containers/PageContainer/index.tsx","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx","storage.ts","components/Logo/logo.png"],"names":["resources","en","translation","de","i18n","use","initReactI18next","init","lng","fallbackLng","Object","keys","keySeparator","interpolation","escapeValue","AuthenticatedRoute","isAuthenticated","loginPath","props","history","useHistory","location","useLocation","setTimeout","replace","from","Routing","routes","extraProps","matchedPath","useRouteMatch","path","IndexRoute","useRef","Routes","useMemo","map","route","key","isPrivate","private","index","RouteType","Route","trimmedMatchedPath","trimmedPath","realPath","OrigComponent","component","current","exact","render","to","pathname","exportedObject","name","description","baseURL","process","REACT_APP_BASE_URL","ttl","transportList","defaultTimezone","contact","phone","email","createCancelToken","axios","CancelToken","source","endpoints","AuthService","injectedInterceptors","refreshingToken","eventEmitter","token","refreshToken","config","this","create","EventTarget","verifyToken","bind","defaults","headers","common","type","fn","addEventListener","cancelToken","username","password","a","Promise","resolve","data","refresh_token","roles","getConfig","post","types","SET_LOADING","setLoading","isLoading","payload","reducersMap","actionTypes","state","inProcess","loading","initialState","exportedFunction","actionType","produce","draft","authService","LOGOUT","SET_TOKEN","SET_USER_ROLES","LOGIN_ERROR","listeningAPIEvents","setToken","storage","set","setRoles","dispatch","get","rememberMe","listen","detail","onRegenerateTokenSuccess","logout","onRegenerateTokenFailure","String","userDetails","clear","setLoginError","error","login","canceller","loaderActions","then","catch","response","message","status","finally","length","Error","cancel","logged","filters","dateFrom","dateTo","id","pickUpStations","dropOffStations","useDispatch","userActions","t","useTranslation","isLoggedIn","useSelector","user","useState","cancellerLoginRequest","useEffect","className","onClick","doLogin","AppRoutes","ScrollToTop","window","scrollTo","Logo","altText","src","require","alt","Header","children","Loader","LanguageSwitcher","languages","language","onSelect","isSelectorOpen","setSelectorOpen","wrapperRef","sortedLanguages","sort","changeLanguage","event","preventDefault","ref","handleClickOutside","contains","target","document","removeEventListener","useOutsideClick","toUpperCase","href","lang","hrefLang","langMap","nativeName","IconButton","icon","PageContainer","loader","classes","classNames","onLangSelect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","compose","store","preloadedStage","middlewareEnhancer","applyMiddleware","thunk","composedEnhancers","createStore","configureStore","ReactDOM","StrictMode","getElementById","global","localStorage","getItem","value","setItem","remove","removeItem"],"mappings":"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","file":"static/js/main.649297ba.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport localeEN from './en.json';\nimport localeDE from './de.json';\n\nconst resources = {\n  en: { translation: localeEN },\n  de: { translation: localeDE },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: 'en',\n  fallbackLng: Object.keys(resources),\n  keySeparator: false,\n  interpolation: {\n    escapeValue: false,\n  },\n});\n\nexport default i18n;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, useHistory, useLocation } from 'react-router-dom';\n\nexport default function AuthenticatedRoute({ isAuthenticated, loginPath, ...props }: any) {\n  const history = useHistory();\n  const location = useLocation();\n\n  if (!isAuthenticated) {\n    setTimeout(() => history.replace(loginPath, { from: location }), 0);\n    return null;\n  }\n\n  return <Route {...props} />;\n}\n\nAuthenticatedRoute.propTypes = {\n  loginPath: PropTypes.string.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n","import React, { ReactElement, useMemo, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router-dom';\n\nimport AuthenticatedRoute from './AuthenticatedRoute';\n\nconst CATCH_ALL_ROUTE = '*';\n\nexport default function Routing({ routes, ...extraProps }: any) {\n  let { path: matchedPath } = useRouteMatch();\n\n  let IndexRoute = useRef<ReactElement<any, any> | null>(null);\n  const Routes = useMemo(\n    () =>\n      routes.map((route: any, key:any) => {\n        const { private: isPrivate, index, path, ...props } = route;\n        const RouteType = isPrivate ? AuthenticatedRoute : Route;\n\n        const trimmedMatchedPath = matchedPath.replace(/^\\/$/, '');\n        const trimmedPath = path.replace(/^\\/$/, '');\n        const realPath = path === CATCH_ALL_ROUTE ? path : `${trimmedMatchedPath}${trimmedPath}`;\n\n        // Setup Index\n        if (index && matchedPath !== realPath && realPath !== CATCH_ALL_ROUTE) {\n          const { component: OrigComponent } = props;\n          const render = () => (index === 'redirect' ? <Redirect to={{ pathname: realPath }} /> : <OrigComponent />);\n          IndexRoute.current = <Route exact path={matchedPath} render={render} />;\n        }\n\n        return <RouteType {...props} {...extraProps} key={key} path={realPath} />;\n      }),\n    [routes, extraProps, matchedPath]\n  );\n\n  return (\n    <Switch>\n      {IndexRoute.current}\n      {Routes}\n    </Switch>\n  );\n}\n\nRouting.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loginPath: PropTypes.string.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n","import pkg from '../package.json';\n\nconst exportedObject = {\n  name: pkg.description,\n  baseURL: process.env.REACT_APP_BASE_URL || 'https://dat.local/api',\n  ttl: {\n    transportList: 60,\n  },\n  defaultTimezone: 'Europe/Berlin',\n  contact: {\n    name: 'Transport Team Seven Senders',\n    phone: '+49 30 233218755',\n    email: 'operations@sevensenders.com',\n  },\n};\n\nexport default exportedObject;\n","import axios, {CancelTokenSource } from 'axios';\n\nexport function createCancelToken(): CancelTokenSource {\n  return axios.CancelToken.source();\n}\n","import axios, { AxiosInstance, CancelTokenSource } from 'axios';\nimport EventTarget from '@ungap/event-target';\nimport config from '../config';\n\n\nexport const endpoints = {\n  login: '/token',\n  refreshToken: '/token/refresh',\n  userDetails: '/me'\n};\n\nexport default class AuthService {\n  \n  injectedInterceptors: boolean;\n  refreshingToken: boolean;\n  axios: AxiosInstance;\n  eventEmitter: EventTarget;\n  token: string = \"\";\n  refreshToken: string = 'true';\n\n  constructor() {\n    const baseURL = config.baseURL;\n    this.injectedInterceptors = false;\n    this.refreshingToken = false;\n\n    this.axios = axios.create({\n      baseURL,\n    });\n\n    this.eventEmitter = new EventTarget();\n\n    this.verifyToken = this.verifyToken.bind(this);\n  }\n\n  /**\n   * Request interceptor to verify token expiry\n   * @param config\n   * @returns {*}\n   */\n  verifyToken(config: any) {\n    /**\n     * TODO verify token\n     */\n    return config;\n  }\n\n  \n  getHeaders() {\n    return { ...this.axios.defaults.headers.common };\n  }\n\n  listen(type: any, fn: any) {\n    return this.eventEmitter.addEventListener(type, fn);\n  }\n\n  /**\n   * Set token for all request\n   * @param token\n   * @param refreshToken\n   */\n  setToken(token: string, refreshToken: string = 'true') {\n    this.token = token;\n    this.refreshToken = refreshToken;\n    this.axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n\n  /**\n   * Generate config for request\n   * @param cancelToken\n   * @returns {{}}\n   */\n  getConfig({ cancelToken }: any) {\n    const config: any = {};\n\n    if (cancelToken && cancelToken.token) {\n      config.cancelToken = cancelToken.token;\n    }\n\n    return config;\n  }\n\n  /*async login(username, password, cancelToken = null) {\n    const config = this.getConfig({ cancelToken });\n    return await this.axios.post(endpoints.login, { username, password }, config);\n  }*/\n\n  async login(username: string, password: string, cancelToken: null | CancelTokenSource = null) {\n    return await Promise.resolve({data:{token: \"my_token\", refresh_token:true}});\n  }\n\n  /*async userDetails(cancelToken = null) {\n    const config = this.getConfig({ cancelToken });\n\n    return await this.axios.get(endpoints.userDetails, config);\n  }*/\n\n  async userDetails(cancelToken: null | CancelTokenSource = null) {\n    return await Promise.resolve({data:{roles: [\"admin\"]}});\n  }\n\n  async generateToken(refreshToken: boolean, cancelToken: null = null) {\n    const config = this.getConfig({ cancelToken });\n\n    return await this.axios.post(endpoints.refreshToken, { refresh_token: refreshToken }, config);\n  }\n\n}\n","export const types = {\n    SET_LOADING: 'SET_LOADING',\n  };\n  \n  export const setLoading = (isLoading:boolean = false) => ({\n    type: types.SET_LOADING,\n    payload: isLoading,\n  });\n  ","import produce from 'immer';\nimport { types as actionTypes } from './actions';\n\n\ninterface IState {\n  inProcess: number,\n  loading: boolean\n}\n\nconst reducersMap = {\n  [actionTypes.SET_LOADING]: (state: IState, isLoading: boolean) => {\n    state.inProcess += isLoading ? 1 : -1;\n\n    if (state.inProcess <= 0) {\n      state.loading = false;\n      state.inProcess = 0;\n    } else {\n      state.loading = true;\n    }\n\n    return state;\n  },\n};\n\nconst initialState = {\n  loading: false,\n  inProcess: 0,\n};\n\nconst exportedFunction =  (state: IState = initialState, { type: actionType, payload }: any) =>\n  produce(state, (draft) => (actionType in reducersMap && reducersMap[actionType](draft, payload)) || state);\n\nexport default exportedFunction;\n","import { CancelTokenSource } from 'axios';\nimport { createCancelToken } from '../../api';\nimport AuthService from '../../api/AuthService';\nimport storage from '../../storage';\nimport { actions as loaderActions } from '../loader';\n\nlet authService = new AuthService();\n\nexport const types = {\n  LOGOUT: 'LOGOUT',\n  SET_TOKEN: 'SET_TOKEN',\n  SET_USER_ROLES: 'SET_USER_ROLES',\n  LOGIN_ERROR: 'LOGIN_ERROR'\n};\n\n/**\n * token regenerate events\n */\nlet listeningAPIEvents = false;\n\nconst onRegenerateTokenSuccess =\n  (dispatch: any) =>\n  ({ detail: data }: any) => {\n    const { token, refresh_token } = data;\n    const rememberMe = storage.get('rememberMe') === 'true';\n\n    dispatch(setToken(token, rememberMe && refresh_token));\n  };\n\nconst onRegenerateTokenFailure = (dispatch: any) => () => {\n  dispatch(logout());\n};\n\n/**\n * Actions\n */\n\nconst setToken = (token: string, refreshToken: string) => {\n  storage.set('token', token);\n  refreshToken && storage.set('refreshToken', refreshToken);\n\n  authService.setToken(token, refreshToken);\n\n  return {\n    type: types.SET_TOKEN,\n    payload: { token, refreshToken },\n  };\n};\n\nconst setRoles = (roles: string[]) => ({\n  type: types.SET_USER_ROLES,\n  payload: roles,\n});\n\nexport const init = () => (dispatch: any) => {\n  const token = storage.get('token');\n  const refreshToken: boolean = storage.get('refreshToken') === 'true';\n  const rememberMe: boolean = (storage.get('rememberMe') === 'true');\n\n  if (!listeningAPIEvents) {\n    authService.listen('regenerate_success', onRegenerateTokenSuccess(dispatch));\n    authService.listen('regenerate_failure', onRegenerateTokenFailure(dispatch));\n    listeningAPIEvents = true;\n  }\n\n  if (!token || (rememberMe && !refreshToken)) {\n    storage.clear();\n    return;\n  }\n\n  dispatch(setToken(token, String(rememberMe && refreshToken)));\n\n  return dispatch(userDetails());\n};\n\nconst setLoginError = (error: any) => ({\n  type: types.LOGIN_ERROR,\n  payload: error,\n});\n\nexport const login = (username: string, password: string, rememberMe: boolean) => (dispatch: any) => {\n  let canceller = createCancelToken();\n\n  storage.set('rememberMe', String(rememberMe));\n\n  dispatch(loaderActions.setLoading(true));\n  dispatch(setLoginError(null));\n\n  authService.login(username, password, canceller)\n    .then(({ data }) => {\n      const { token, refresh_token } = data;\n      \n      dispatch(setToken(token, String(rememberMe && refresh_token)));\n      dispatch(userDetails(canceller));\n    })\n    .catch(({ response }) => {\n      dispatch(\n        setLoginError({\n          message: response?.data?.message || 'Something wrong',\n          status: response?.status || 500,\n        })\n      );\n    })\n    .finally(() => {\n      dispatch(loaderActions.setLoading(false));\n    });\n\n  return canceller;\n};\n\nexport const logout = () => (dispatch: any) => {\n  storage.clear();\n  dispatch({ type: types.LOGOUT });\n};\n\nexport const userDetails =\n  (cancelToken: null | CancelTokenSource = null) =>\n  (dispatch: any) => {\n    const canceller = cancelToken || createCancelToken();\n\n    dispatch(loaderActions.setLoading(true));\n\n    authService.userDetails(canceller)\n      .then(({ data }) => {\n        const { roles } = data;\n        if (!roles || roles.length === 0) {\n          throw new Error(\"User doesn't have roles\");\n        }\n        \n        dispatch(setRoles(roles));\n      })\n      .catch((error) => {\n        dispatch(logout());\n      })\n      .finally(() => {\n        canceller.cancel();\n        dispatch(loaderActions.setLoading(false));\n      });\n\n    return canceller;\n  };\n","import produce from 'immer';\nimport { types as actionTypes } from './actions';\n\ninterface rolesStates {\n  logged: boolean,\n  roles: string[]\n}\n\nconst setRoles = (state: rolesStates, roles: string[]) => {\n  state.logged = true;\n  state.roles = roles;\n\n  return state;\n};\n\ninterface tokenState {\n  token: string,\n  refreshToken: boolean\n}\nconst setToken = (state: tokenState, { token, refreshToken = true }: tokenState) => {\n  state.token = token;\n  refreshToken && (state.refreshToken = refreshToken);\n\n  return state;\n};\n\nconst logout = () => {\n  return initialState;\n};\n\ninterface loginErrorState {\n  error: string\n}\nconst loginError = (state:loginErrorState, error:string) => {\n  state.error = error;\n  return state;\n};\n\nconst reducersMap = {\n  [actionTypes.SET_TOKEN]: setToken,\n  [actionTypes.LOGOUT]: logout,\n  [actionTypes.SET_USER_ROLES]: setRoles,\n  [actionTypes.LOGIN_ERROR]: loginError\n};\n\n\n\ninterface initialStateInterface {\n  logged: boolean,\n  token: string,\n  refreshToken: true,\n  roles: string[],\n  error: string ,\n  filters: any\n}\n\nconst initialState: initialStateInterface = {\n  logged: false,\n  token: \"\",\n  refreshToken: true,\n  roles: [],\n  error: \"\",\n  filters: {\n    dateFrom: '',\n    dateTo: '',\n    id: '',\n    pickUpStations: [],\n    dropOffStations: [],\n  },\n};\n\nconst exportedFunction =  (state:initialStateInterface = initialState, { type: actionType, payload }: any) => {\n  return produce(state, (draft) => (actionType in reducersMap && reducersMap[actionType](draft, payload)) || state);\n};\n\nexport default exportedFunction;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Routing from './Routing';\nimport { LoginPage, SamplePage, NotFoundPage } from '../pages';\nimport { actions as userActions } from '../store/user';\nimport NewPage from '../pages/NewPage';\n\nconst loginPath = '/login';\n\nfunction Logout() {\n  const dispatch = useDispatch();\n  dispatch(userActions.logout());\n  return <Redirect to={{ pathname: loginPath }} />;\n}\n\nconst routes = [\n  {\n    path: '/logout',\n    component: Logout,\n    exact: true,\n  },\n  {\n    path: '/login',\n    component: LoginPage,\n    exact: true,\n  },\n  {\n    private: true,\n    index: 'redirect',\n    path: '/sample',\n    component: SamplePage,\n    exact: true,\n  },\n  {\n    private: true,\n    path: '/newPage',\n    component: NewPage,\n    exact: true\n  },\n  {\n    path: '*',\n    component: NotFoundPage,\n  },\n];\n\nexport default function AppRoutes() {\n  const isAuthenticated = useSelector((state: any) => state.user.logged);\n  const props = {\n    isAuthenticated,\n    loginPath,\n  };\n\n  return <Routing routes={routes} {...props} />;\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport config from '../../config';\nimport { actions as userActions } from '../../store/user';\n\nexport default function Login() {\n  const { t } = useTranslation();\n  const isLoggedIn = useSelector((state: any) => state.user.logged);\n  const [username] = useState('');\n  const [password] = useState('');\n  const [rememberMe] = useState(false);\n\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let {\n    from: { pathname },\n  }: any = location.state || { from: { pathname: '/' } };\n  const cancellerLoginRequest = useRef<any | null>(null);\n\n  useEffect(() => {\n    !isLoggedIn && dispatch(userActions.init());\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    return () => {\n      cancellerLoginRequest.current && cancellerLoginRequest.current.cancel();\n    };\n  }, []);\n\n  const doLogin = ({ username, password, rememberMe }: any) => {\n   \n    cancellerLoginRequest.current && cancellerLoginRequest.current.cancel();\n    cancellerLoginRequest.current = dispatch(userActions.login(username, password, rememberMe));\n  };\n\n  if (isLoggedIn) {\n    setTimeout(() => history.replace(pathname), 0);\n    return null;\n  }\n\n  return (\n    <div className=\"login-page\">\n      <h1>{config.name}</h1>\n      <input></input>\n      <br></br>\n      <br></br>\n      <input type=\"password\"></input>\n      <br></br>\n      <br></br>\n      <button onClick={()=>doLogin({username, password, rememberMe})}>{t('Login')}</button>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Sample() {\n  return (\n    <div>\n      <h1>SamplePage</h1>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NewPage() {\n  return (\n    <div>\n      <h1>NewPage</h1>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NotFoundPage() {\n  return (\n    <div>\n      Not Found\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\ninterface LogoProp {\n  altText?: string\n}\n\nexport default function Logo({ altText = 'Seven Senders' }: LogoProp) {\n  return (\n    <div className=\"logo\">\n      <img src={require('./logo.png')} alt={altText} />\n    </div>\n  );\n}\n\nLogo.propTypes = {\n  altText: PropTypes.string,\n};\n","import React from 'react';\nimport Logo from '../Logo';\nimport { Link } from 'react-router-dom';\n\ninterface HeaderProp {\n  children: any\n}\n\nexport default function Header({ children }: HeaderProp) {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"left\">\n          <Link to=\"/\">\n            <Logo />\n          </Link>\n        </div>\n        <div className=\"right\">{children}</div>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport default function Loader() {\n  return (\n    <div className=\"loading\">\n      <i className=\"fa fa-spinner fa-pulse\" />\n    </div>\n  );\n}\n","import React, { useState, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport langMap from 'langmap';\n\nimport useOutsideClick from '../../utils/hooks/useOutsideClick';\n\ninterface LanguageSwitcherProp {\n  languages: readonly string[],\n  language: string,\n  onSelect: any\n}\n\nexport default function LanguageSwitcher({ languages, language, onSelect }: LanguageSwitcherProp) {\n  const [isSelectorOpen, setSelectorOpen] = useState(false);\n  const wrapperRef = useRef(null);\n\n  const sortedLanguages = useMemo(() => [...languages].sort(), [languages]);\n\n  const toggleSelector = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    setSelectorOpen(!isSelectorOpen);\n  };\n\n  const changeLanguage = (language: string) => async (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    onSelect(language);\n    setSelectorOpen(false);\n  };\n\n  useOutsideClick(wrapperRef, () => setSelectorOpen(false));\n\n  return (\n    <div className=\"language-switcher\" ref={wrapperRef}>\n      <button className=\"selected\" onClick={toggleSelector}>\n        {language.toUpperCase()} <i className=\"fas fa-sort-down\" />\n      </button>\n      {isSelectorOpen && (\n        <div className=\"languages\">\n          {sortedLanguages.map((language:string, key: any) => (\n            <a\n              className={`language ${language}`}\n              href={`#${language}`}\n              lang={language}\n              hrefLang={language}\n              key={key}\n              onClick={changeLanguage(language)}\n            >\n              {language in langMap ? langMap[language].nativeName : language.toUpperCase()}\n            </a>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nLanguageSwitcher.propTypes = {\n  languages: PropTypes.arrayOf(PropTypes.string).isRequired,\n  language: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\n\nexport default function useOutsideClick(ref: any, onClick: any) {\n  function handleClickOutside(event: any) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      onClick();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\ninterface IconProp {\n  children: any,\n  icon: string,\n  onClick: any\n}\n\nexport function IconButton({ children, icon, onClick = () => {} }: IconProp) {\n  return (\n    <button className=\"icon-button\" onClick={onClick}>\n      <i className={`fas ${icon}`} /> {children}\n    </button>\n  );\n}\n\nIconButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport Header from '../../components/Header';\nimport Loader from '../../components/Loader';\nimport LanguageSwitcher from '../../components/LanguageSwitcher';\nimport { IconButton } from '../../components/IconButton';\n\nimport { Link } from 'react-router-dom';\n\n\ninterface PageContainerProp {\n  children: any\n}\n\nexport default function PageContainer({ children }: PageContainerProp) {\n  const isLoggedIn = useSelector((state: any) => state.user.logged);\n  const isLoading = useSelector((state: any) => state.loader.loading);\n  const { t, i18n } = useTranslation();\n  const { language, languages } = i18n;\n\n  const classes = classNames('page-container', {\n    'guest-user': !isLoggedIn,\n  });\n\n  const onLangSelect = async (language: string) => {\n    await i18n.changeLanguage(language);\n  };\n\n  return (\n    <div className={classes}>\n      <Header>\n        <LanguageSwitcher language={language} languages={languages} onSelect={onLangSelect} />\n        {isLoggedIn && (\n          <div>\n            <Link to={'/logout'}>\n              <IconButton icon=\"fa-sign-out-alt\">{t('Logout')}</IconButton>\n            </Link>\n\n            <Link to={'newPage'}>\n                newPage\n            </Link>\n          </div>\n        )}\n      </Header>\n      <main>{children}</main>\n      {isLoading && <Loader />}\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './routes';\nimport ScrollToTop from './routes/ScrollToTop';\nimport PageContainer from './containers/PageContainer';\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop />\n      <PageContainer>\n        <Routes />\n      </PageContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { reducers as user } from './user';\nimport { reducers as loader } from './loader';\n\nconst rootReducer = combineReducers({\n  loader,\n  user\n});\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = (\n    process.env.NODE_ENV !== 'production' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n) || compose;\n\nconst exportedFunction = function configureStore(preloadedStage?: any ) {\n    const middlewareEnhancer = applyMiddleware(thunk);\n    const composedEnhancers = composeEnhancers(middlewareEnhancer);\n\n    return createStore(rootReducer, preloadedStage, composedEnhancers);\n}\n\nexport default exportedFunction;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './locales';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const storage = global.localStorage;\n\nconst exportedObject = {\n  get: (key: string) => storage && storage.getItem(key),\n  set: (key: string, value: string) => storage && storage.setItem(key, value),\n  remove: (key: string) => storage && storage.removeItem(key),\n  clear: () => storage && storage.clear(),\n};\n\nexport default exportedObject;\n","export default __webpack_public_path__ + \"static/media/logo.001dd072.png\";"],"sourceRoot":""}